<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neuroglia.Mediation</name>
    </assembly>
    <members>
        <member name="T:Neuroglia.Mediation.PipelineMiddlewareAttribute">
            <summary>
            Represents the attribute used to add <see cref="T:Neuroglia.Mediation.IMiddleware`2"/> to an <see cref="T:Neuroglia.Mediation.IRequestHandler`2"/>
            </summary>
        </member>
        <member name="M:Neuroglia.Mediation.PipelineMiddlewareAttribute.#ctor(System.Type,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.Mediation.PipelineMiddlewareAttribute"/>
            </summary>
            <param name="pipelineBehaviorType">The type of <see cref="T:Neuroglia.Mediation.IMiddleware`2"/> to apply</param>
            <param name="priority">The priority of the the referenced <see cref="T:Neuroglia.Mediation.IMiddleware`2"/></param>
        </member>
        <member name="P:Neuroglia.Mediation.PipelineMiddlewareAttribute.PipelineBehaviorType">
            <summary>
            Gets the type of <see cref="T:Neuroglia.Mediation.IMiddleware`2"/> to apply
            </summary>
        </member>
        <member name="P:Neuroglia.Mediation.PipelineMiddlewareAttribute.Priority">
            <summary>
            Gets the priority of the referenced <see cref="T:Neuroglia.Mediation.IMiddleware`2"/>
            </summary>
        </member>
        <member name="T:Neuroglia.Mediation.Command">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.Mediation.ICommand`1"/> interface
            </summary>
        </member>
        <member name="T:Neuroglia.Mediation.Command`1">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.Mediation.ICommand`2"/> interface
            </summary>
            <typeparam name="T">The type of result wrapped by the resulting <see cref="T:Neuroglia.IOperationResult`1"/></typeparam>
        </member>
        <member name="T:Neuroglia.Mediation.Configuration.IMediatorOptionsBuilder">
            <summary>
            Defines the fundamentals of a service used to build and configure a <see cref="T:Neuroglia.Mediation.Mediator"/> instance
            </summary>
        </member>
        <member name="M:Neuroglia.Mediation.Configuration.IMediatorOptionsBuilder.ScanAssembly(System.Reflection.Assembly)">
            <summary>
            Scans the specified <see cref="T:System.Reflection.Assembly"/> for <see cref="T:Neuroglia.Mediation.IRequestHandler`2"/> and <see cref="T:Neuroglia.Mediation.INotificationHandler`1"/> implementations
            </summary>
            <param name="assembly">The <see cref="T:System.Reflection.Assembly"/> to scan</param>
            <returns>The configured <see cref="T:Neuroglia.Mediation.Configuration.IMediatorOptionsBuilder"/></returns>
        </member>
        <member name="M:Neuroglia.Mediation.Configuration.IMediatorOptionsBuilder.UseDefaultPipelineBehavior(System.Type)">
            <summary>
            Applies the specified <see cref="T:Neuroglia.Mediation.IMiddleware`2"/> to all <see cref="T:Neuroglia.Mediation.IRequestHandler`2"/> implementations<para></para>
            The order in which this method is called defines the order in which the behaviors will be called in the pipeline
            </summary>
            <param name="pipelineType">The type of the default <see cref="T:Neuroglia.Mediation.IMiddleware`2"/> to use</param>
            <returns>The configured <see cref="T:Neuroglia.Mediation.Configuration.IMediatorOptionsBuilder"/></returns>
        </member>
        <member name="M:Neuroglia.Mediation.Configuration.IMediatorOptionsBuilder.Build">
            <summary>
            Builds the <see cref="T:Neuroglia.Mediation.Configuration.MediatorOptions"/>
            </summary>
            <returns>The resulting <see cref="T:Neuroglia.Mediation.Configuration.MediatorOptions"/></returns>
        </member>
        <member name="T:Neuroglia.Mediation.Configuration.MediatorOptions">
            <summary>
            Represents the object used to configure a <see cref="T:Neuroglia.Mediation.Mediator"/> instance
            </summary>
        </member>
        <member name="P:Neuroglia.Mediation.Configuration.MediatorOptions.AssembliesToScan">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.List`1"/> containing the assemblies to scan for <see cref="T:Neuroglia.Mediation.IRequestHandler`2"/> and <see cref="T:Neuroglia.Mediation.INotificationHandler`1"/> implementations
            </summary>
        </member>
        <member name="P:Neuroglia.Mediation.Configuration.MediatorOptions.DefaultPipelineBehaviors">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:Neuroglia.Mediation.IMiddleware`2"/> types to apply to to all <see cref="T:Neuroglia.Mediation.IRequestHandler`2"/> implementations
            </summary>
        </member>
        <member name="T:Neuroglia.Mediation.Configuration.MediatorOptionsBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.Mediation.Configuration.IMediatorOptionsBuilder"/> interface
            </summary>
        </member>
        <member name="M:Neuroglia.Mediation.Configuration.MediatorOptionsBuilder.#ctor">
            <summary>
            Initializes a new <see cref="T:Neuroglia.Mediation.Configuration.MediatorOptionsBuilder"/>
            </summary>
        </member>
        <member name="P:Neuroglia.Mediation.Configuration.MediatorOptionsBuilder.Options">
            <summary>
            Gets the <see cref="T:Neuroglia.Mediation.Configuration.MediatorOptions"/> to configure
            </summary>
        </member>
        <member name="M:Neuroglia.Mediation.Configuration.MediatorOptionsBuilder.ScanAssembly(System.Reflection.Assembly)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Mediation.Configuration.MediatorOptionsBuilder.UseDefaultPipelineBehavior(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Mediation.Configuration.MediatorOptionsBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.Mediation.ICommandHandlerExtensions">
            <summary>
            Defines extensions for <see cref="T:Neuroglia.Mediation.ICommandHandler"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.Ok``1(Neuroglia.Mediation.ICommandHandler{``0})">
            <summary>
            Creates a new <see cref="T:Neuroglia.IOperationResult"/> indicating that the <see cref="T:Neuroglia.Mediation.ICommand"/> executed successfully
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler"/></param>
            <returns>A new <see cref="T:Neuroglia.IOperationResult"/> indicating that the <see cref="T:Neuroglia.Mediation.ICommand"/> executed successfully</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.Invalid``1(Neuroglia.Mediation.ICommandHandler{``0})">
            <summary>
            Creates a new <see cref="T:Neuroglia.IOperationResult"/> indicating that the <see cref="T:Neuroglia.Mediation.ICommand"/> is invalid
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler"/></param>
            <returns>A new <see cref="T:Neuroglia.IOperationResult"/> indicating that the <see cref="T:Neuroglia.Mediation.ICommand"/> is invalid</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.Invalid``1(Neuroglia.Mediation.ICommandHandler{``0},System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Neuroglia.IOperationResult"/> indicating that the <see cref="T:Neuroglia.Mediation.ICommand"/> is invalid
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler"/></param>
            <param name="errorCode">The error code</param>
            <param name="errorMessage">The error message</param>
            <returns>A new <see cref="T:Neuroglia.IOperationResult"/> indicating that the <see cref="T:Neuroglia.Mediation.ICommand"/> is invalid</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.Invalid``1(Neuroglia.Mediation.ICommandHandler{``0},Neuroglia.Error[])">
            <summary>
            Creates a new <see cref="T:Neuroglia.IOperationResult"/> indicating that the <see cref="T:Neuroglia.Mediation.ICommand"/> is invalid
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler"/></param>
            <param name="errors">An array containing the <see cref="T:Neuroglia.Error"/>s that have occured</param>
            <returns>A new <see cref="T:Neuroglia.IOperationResult"/> indicating that the <see cref="T:Neuroglia.Mediation.ICommand"/> is invalid</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.Invalid``1(Neuroglia.Mediation.ICommandHandler{``0},System.String,Neuroglia.Error[])">
            <summary>
            Creates a new <see cref="T:Neuroglia.IOperationResult"/> indicating that the <see cref="T:Neuroglia.Mediation.ICommand"/> is invalid
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler"/></param>
            <param name="errorCode">The error code prefix. Will be concatenated with the code of the specified <see cref="T:Neuroglia.Error"/>s</param>
            <param name="errors">An array containing the <see cref="T:Neuroglia.Error"/>s that have occured</param>
            <returns>A new <see cref="T:Neuroglia.IOperationResult"/> indicating that the <see cref="T:Neuroglia.Mediation.ICommand"/> is invalid</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.NotFound``1(Neuroglia.Mediation.ICommandHandler{``0})">
            <summary>
            Creates a new <see cref="T:Neuroglia.IOperationResult"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.ICommand"/> could not be found
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler"/></param>
            <returns>A new <see cref="T:Neuroglia.IOperationResult"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.ICommand"/> could not be found</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.NotFound``1(Neuroglia.Mediation.ICommandHandler{``0},System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Neuroglia.IOperationResult"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.ICommand"/> could not be found
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler"/></param>
            <param name="errorCode">The error code</param>
            <param name="errorMessage">The error message</param>
            <returns>A new <see cref="T:Neuroglia.IOperationResult"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.ICommand"/> could not be found</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.NotModified``1(Neuroglia.Mediation.ICommandHandler{``0})">
            <summary>
            Creates a new <see cref="T:Neuroglia.IOperationResult"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.ICommand"/> was not modified
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler"/></param>
            <returns>A new <see cref="T:Neuroglia.IOperationResult"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.ICommand"/> was not modified</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.Forbid``1(Neuroglia.Mediation.ICommandHandler{``0})">
            <summary>
            Creates a new <see cref="T:Neuroglia.IOperationResult"/> indicating that the operation is forbidden to the current user
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler"/></param>
            <returns>A new <see cref="T:Neuroglia.IOperationResult"/> indicating that the operation is forbidden to the current user</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.InternalError``1(Neuroglia.Mediation.ICommandHandler{``0})">
            <summary>
            Creates a new <see cref="T:Neuroglia.IOperationResult"/> indicating that an internal error occured while handling the <see cref="T:Neuroglia.Mediation.ICommand"/>
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler"/></param>
            <returns>A new <see cref="T:Neuroglia.IOperationResult"/> indicating that an internal error occured while handling the <see cref="T:Neuroglia.Mediation.ICommand"/></returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.Ok``2(Neuroglia.Mediation.ICommandHandler{``0,``1})">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> executed successfully
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler`2"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> executed successfully</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.Ok``2(Neuroglia.Mediation.ICommandHandler{``0,``1},``1)">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> executed successfully
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler`2"/></param>
            <param name="result">The data wrapped by the resulting <see cref="T:Neuroglia.OperationResult`1"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> executed successfully</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.Invalid``2(Neuroglia.Mediation.ICommandHandler{``0,``1})">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler`2"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.Invalid``2(Neuroglia.Mediation.ICommandHandler{``0,``1},System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler`2"/></param>
            <param name="errorCode">The error code</param>
            <param name="errorMessage">The error message</param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.Invalid``2(Neuroglia.Mediation.ICommandHandler{``0,``1},Neuroglia.Error[])">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler`2"/></param>
            <param name="errors">An array containing the <see cref="T:Neuroglia.Error"/>s that have occured</param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.Invalid``2(Neuroglia.Mediation.ICommandHandler{``0,``1},System.String,Neuroglia.Error[])">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler`2"/></param>
            <param name="errorPrefix">The error code prefix. Will be concatenated with the code of the specified <see cref="T:Neuroglia.Error"/>s</param>
            <param name="errors">An array containing the <see cref="T:Neuroglia.Error"/>s that have occured</param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.NotFound``2(Neuroglia.Mediation.ICommandHandler{``0,``1})">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.Command`1"/> could not be found
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler`2"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.Command`1"/> could not be found</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.NotFound``2(Neuroglia.Mediation.ICommandHandler{``0,``1},System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.Command`1"/> could not be found
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler`2"/></param>
            <param name="errorPrefix">The error code</param>
            <param name="errorMessage">The error message</param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.Command`1"/> could not be found</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.NotModified``2(Neuroglia.Mediation.ICommandHandler{``0,``1})">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.Command`1"/> was not modified
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler`2"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.Command`1"/> was not modified</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.Forbid``2(Neuroglia.Mediation.ICommandHandler{``0,``1})">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the operation is forbidden to the current user
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler`2"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the operation is forbidden to the current user</returns>
        </member>
        <member name="M:Neuroglia.Mediation.ICommandHandlerExtensions.InternalError``2(Neuroglia.Mediation.ICommandHandler{``0,``1})">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an internal error occured while handling the <see cref="T:Neuroglia.Mediation.Command`1"/>
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.ICommandHandler`2"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an internal error occured while handling the <see cref="T:Neuroglia.Mediation.Command`1"/></returns>
        </member>
        <member name="T:Neuroglia.Mediation.IQueryHandlerExtensions">
            <summary>
            Defines extensions for <see cref="T:Neuroglia.Mediation.IQueryHandler"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.Mediation.IQueryHandlerExtensions.Ok``2(Neuroglia.Mediation.IQueryHandler{``0,``1})">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> executed successfully
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.IQueryHandler"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> executed successfully</returns>
        </member>
        <member name="M:Neuroglia.Mediation.IQueryHandlerExtensions.Ok``2(Neuroglia.Mediation.IQueryHandler{``0,``1},``1)">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> executed successfully
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.IQueryHandler"/></param>
            <param name="result">The data wrapped by the resulting <see cref="T:Neuroglia.OperationResult`1"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> executed successfully</returns>
        </member>
        <member name="M:Neuroglia.Mediation.IQueryHandlerExtensions.Invalid``2(Neuroglia.Mediation.IQueryHandler{``0,``1})">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.IQueryHandler"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid</returns>
        </member>
        <member name="M:Neuroglia.Mediation.IQueryHandlerExtensions.Invalid``2(Neuroglia.Mediation.IQueryHandler{``0,``1},System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.IQueryHandler"/></param>
            <param name="errorCode">The error code</param>
            <param name="errorMessage">The error message</param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid</returns>
        </member>
        <member name="M:Neuroglia.Mediation.IQueryHandlerExtensions.Invalid``2(Neuroglia.Mediation.IQueryHandler{``0,``1},Neuroglia.Error[])">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.IQueryHandler"/></param>
            <param name="errors">An array containing the <see cref="T:Neuroglia.Error"/>s that have occured</param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid</returns>
        </member>
        <member name="M:Neuroglia.Mediation.IQueryHandlerExtensions.Invalid``2(Neuroglia.Mediation.IQueryHandler{``0,``1},System.String,Neuroglia.Error[])">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.IQueryHandler"/></param>
            <param name="errorCode">The error code prefix. Will be concatenated with the code of the specified <see cref="T:Neuroglia.Error"/>s</param>
            <param name="errors">An array containing the <see cref="T:Neuroglia.Error"/>s that have occured</param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the <see cref="T:Neuroglia.Mediation.Command`1"/> is invalid</returns>
        </member>
        <member name="M:Neuroglia.Mediation.IQueryHandlerExtensions.NotFound``2(Neuroglia.Mediation.IQueryHandler{``0,``1})">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.Command`1"/> could not be found
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.IQueryHandler"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.Command`1"/> could not be found</returns>
        </member>
        <member name="M:Neuroglia.Mediation.IQueryHandlerExtensions.NotFound``2(Neuroglia.Mediation.IQueryHandler{``0,``1},System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.Command`1"/> could not be found
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.IQueryHandler"/></param>
            <param name="errorCode">The error code</param>
            <param name="errorMessage">The error message</param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.Command`1"/> could not be found</returns>
        </member>
        <member name="M:Neuroglia.Mediation.IQueryHandlerExtensions.NotModified``2(Neuroglia.Mediation.IQueryHandler{``0,``1})">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.Command`1"/> was not modified
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.IQueryHandler"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an object related to the <see cref="T:Neuroglia.Mediation.Command`1"/> was not modified</returns>
        </member>
        <member name="M:Neuroglia.Mediation.IQueryHandlerExtensions.Forbid``2(Neuroglia.Mediation.IQueryHandler{``0,``1})">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the operation is forbidden to the current user
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.IQueryHandler"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that the operation is forbidden to the current user</returns>
        </member>
        <member name="M:Neuroglia.Mediation.IQueryHandlerExtensions.InternalError``2(Neuroglia.Mediation.IQueryHandler{``0,``1})">
            <summary>
            Creates a new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an internal error occured while handling the <see cref="T:Neuroglia.Mediation.Command`1"/>
            </summary>
            <param name="handler">The extended <see cref="T:Neuroglia.Mediation.IQueryHandler"/></param>
            <returns>A new <see cref="T:Neuroglia.OperationResult`1"/> indicating that an internal error occured while handling the <see cref="T:Neuroglia.Mediation.Command`1"/></returns>
        </member>
        <member name="T:Neuroglia.Mediation.IServiceCollectionExtensions">
            <summary>
            Defines extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.Mediation.IServiceCollectionExtensions.AddMediator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Neuroglia.Mediation.Configuration.IMediatorOptionsBuilder})">
            <summary>
            Adds and configures a new <see cref="T:Neuroglia.Mediation.Mediator"/> service
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="configurationAction">The <see cref="T:System.Action`1"/> used to configure the <see cref="T:Neuroglia.Mediation.IMediator"/> options</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Neuroglia.Mediation.ICommand">
            <summary>
            Defines the fundamentals of a CQRS command
            </summary>
        </member>
        <member name="P:Neuroglia.Mediation.ICommand.Context">
            <summary>
            Gets the <see cref="T:Neuroglia.IMetadata"/> used to describe the <see cref="T:Neuroglia.Mediation.ICommand"/>'s context
            </summary>
        </member>
        <member name="T:Neuroglia.Mediation.ICommand`1">
            <summary>
            Defines the fundamentals of a CQRS command 
            </summary>
            <typeparam name="TResult">The expected <see cref="T:Neuroglia.IOperationResult"/> type</typeparam>
        </member>
        <member name="T:Neuroglia.Mediation.ICommand`2">
            <summary>
            Defines the fundamentals of a command
            </summary>
            <typeparam name="TResult">The expected <see cref="T:Neuroglia.IOperationResult"/> type</typeparam>
            <typeparam name="T">The type of data wrapped by the <see cref="T:Neuroglia.IOperationResult"/></typeparam>
        </member>
        <member name="T:Neuroglia.Mediation.IQuery">
            <summary>
            Defines the fundamentals of a query
            </summary>
        </member>
        <member name="T:Neuroglia.Mediation.IQuery`1">
            <summary>
            Defines the fundamentals of a query
            </summary>
            <typeparam name="TResult">The expected <see cref="T:Neuroglia.IOperationResult"/> type</typeparam>
        </member>
        <member name="T:Neuroglia.Mediation.IQuery`2">
            <summary>
            Defines the fundamentals of a query
            </summary>
            <typeparam name="TResult">The type of result returned by the <see cref="T:Neuroglia.Mediation.IQuery"/></typeparam>
            <typeparam name="T">The type of data wrapped by the <see cref="T:Neuroglia.IOperationResult`1"/></typeparam>
        </member>
        <member name="T:Neuroglia.Mediation.Query`1">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.Mediation.IQuery`1"/> interface
            </summary>
            <typeparam name="T">The type of result wrapped by the resulting <see cref="T:Neuroglia.IOperationResult`1"/></typeparam>
        </member>
        <member name="T:Neuroglia.Mediation.RequestHandlerDelegate`1">
            <summary>
            Represents an async continuation for the next task to execute in a <see cref="T:Neuroglia.Mediation.IRequestHandler`2"/> pipeline
            </summary>
            <typeparam name="TResult">The type of expected <see cref="T:Neuroglia.IOperationResult"/></typeparam>
            <returns>The resulting <see cref="T:Neuroglia.IOperationResult"/></returns>
        </member>
        <member name="T:Neuroglia.Mediation.DomainExceptionHandlingMiddleware`2">
            <summary>
            Represents an <see cref="T:Neuroglia.Mediation.IMiddleware`2"/> used to handle <see cref="T:Neuroglia.Data.DomainException"/>s during the execution of an <see cref="T:Neuroglia.IRequest"/>
            </summary>
            <typeparam name="TRequest">The type of <see cref="T:Neuroglia.IRequest"/> to handle</typeparam>
            <typeparam name="TResult">The type of expected <see cref="T:Neuroglia.IOperationResult"/></typeparam>
        </member>
        <member name="M:Neuroglia.Mediation.DomainExceptionHandlingMiddleware`2.HandleAsync(`0,Neuroglia.Mediation.RequestHandlerDelegate{`1},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Mediation.DomainExceptionHandlingMiddleware`2.TryCreateErrorResponse(System.String,`1@,Neuroglia.Error[])">
            <summary>
            Creates a new error <see cref="T:Neuroglia.IOperationResult"/>
            </summary>
            <param name="resultCode">The <see cref="T:Neuroglia.OperationResultCode"/> of the <see cref="T:Neuroglia.IOperationResult"/> to create</param>
            <param name="result">The newly created <see cref="T:Neuroglia.IOperationResult"/></param>
            <param name="errors">An array containing the <see cref="T:Neuroglia.Error"/>s that have occured during the processing of the <see cref="T:Neuroglia.Mediation.ICommand"/></param>
            <returns>A new error <see cref="T:Neuroglia.IOperationResult"/></returns>
        </member>
        <member name="T:Neuroglia.Mediation.ICommandHandler">
            <summary>
            Defines the fundamentals of a service used to handle <see cref="T:Neuroglia.Mediation.ICommand"/>s of the specified type
            </summary>
        </member>
        <member name="T:Neuroglia.Mediation.ICommandHandler`1">
            <summary>
            Defines the fundamentals of a service used to handle <see cref="T:Neuroglia.Mediation.ICommand"/>s of the specified type
            </summary>
            <typeparam name="TCommand">The type of <see cref="T:Neuroglia.Mediation.ICommand"/>s to handle</typeparam>
        </member>
        <member name="T:Neuroglia.Mediation.ICommandHandler`2">
            <summary>
            Defines the fundamentals of a service used to handle <see cref="T:Neuroglia.Mediation.ICommand"/>s of the specified type
            </summary>
            <typeparam name="TCommand">The type of <see cref="T:Neuroglia.Mediation.ICommand"/>s to handle</typeparam>
            <typeparam name="T">The type of data wrapped by the resulting <see cref="T:Neuroglia.IOperationResult"/></typeparam>
        </member>
        <member name="T:Neuroglia.Mediation.IMediator">
            <summary>
            Defines the fundamentals of a service used to mediate calls
            </summary>
        </member>
        <member name="M:Neuroglia.Mediation.IMediator.ExecuteAsync``1(Neuroglia.IRequest{``0},System.Threading.CancellationToken)">
            <summary>
            Executes the specified <see cref="T:Neuroglia.IRequest"/>
            </summary>
            <typeparam name="TResult">The expected <see cref="T:Neuroglia.IOperationResult"/> type</typeparam>
            <param name="request">The <see cref="T:Neuroglia.IRequest"/> to execute</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The resulting <see cref="T:Neuroglia.IOperationResult"/></returns>
        </member>
        <member name="M:Neuroglia.Mediation.IMediator.PublishAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Publishes the specified notification
            </summary>
            <typeparam name="TNotification">The type of notification to publish</typeparam>
            <param name="notification">The notification to publish</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="T:Neuroglia.Mediation.IMiddleware`2">
            <summary>
            Defines the fundamentals of a service used to surround an inner <see cref="T:Neuroglia.Mediation.IRequestHandler`2"/> and to provide additional behavior before awaiting the next <see cref="T:Neuroglia.Mediation.RequestHandlerDelegate`1"/>
            </summary>
            <typeparam name="TRequest">The type of </typeparam>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Neuroglia.Mediation.IMiddleware`2.HandleAsync(`0,Neuroglia.Mediation.RequestHandlerDelegate{`1},System.Threading.CancellationToken)">
            <summary>
            Performs additional behavior and awaits the next <see cref="T:Neuroglia.Mediation.RequestHandlerDelegate`1"/> in the pipeline
            </summary>
            <param name="request">The <see cref="T:Neuroglia.IRequest"/> to handle</param>
            <param name="next">The next <see cref="T:Neuroglia.Mediation.RequestHandlerDelegate`1"/> in the pipeline</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The resulting <see cref="T:Neuroglia.IOperationResult"/></returns>
        </member>
        <member name="T:Neuroglia.Mediation.INotificationHandler`1">
            <summary>
            Defines the fundamentals of a service used to handle notifications of the specified type
            </summary>
            <typeparam name="TNotification">The type of notification to handle</typeparam>
        </member>
        <member name="M:Neuroglia.Mediation.INotificationHandler`1.HandleAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Handles the specified notification
            </summary>
            <param name="notification">The notification to handle</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="T:Neuroglia.Mediation.IQueryHandler">
            <summary>
            Defines the fundamentals of a service used to handle queries
            </summary>
        </member>
        <member name="T:Neuroglia.Mediation.IQueryHandler`2">
            <summary>
            Defines the fundamentals of a service used to handle queries
            </summary>
            <typeparam name="TQuery">The type of <see cref="T:Neuroglia.Mediation.IQuery"/> to handle</typeparam>
            <typeparam name="T">The type of data wrapped by the <see cref="T:Neuroglia.IOperationResult"/></typeparam>
        </member>
        <member name="T:Neuroglia.Mediation.IRequestHandler`2">
            <summary>
            Defines the fundamentals of a service used to handle <see cref="T:Neuroglia.IRequest"/>s of the specified type
            </summary>
            <typeparam name="TRequest">The type of <see cref="T:Neuroglia.IRequest"/> to handle</typeparam>
            <typeparam name="TResult">The expected <see cref="T:Neuroglia.IOperationResult"/> type</typeparam>
        </member>
        <member name="M:Neuroglia.Mediation.IRequestHandler`2.HandleAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Handles the specified <see cref="T:Neuroglia.IRequest"/>
            </summary>
            <param name="request">The <see cref="T:Neuroglia.IRequest"/> to handle</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The resulting <see cref="T:Neuroglia.IOperationResult"/></returns>
        </member>
        <member name="T:Neuroglia.Mediation.IRequestHandler`3">
            <summary>
            Defines the fundamentals of a service used to handle <see cref="T:Neuroglia.IRequest"/>s of the specified type
            </summary>
            <typeparam name="TRequest">The type of <see cref="T:Neuroglia.IRequest"/> to handle</typeparam>
            <typeparam name="TResult">The expected <see cref="T:Neuroglia.IOperationResult"/> type</typeparam>
            <typeparam name="T">The type of data returned by the requested operation</typeparam>
        </member>
        <member name="T:Neuroglia.Mediation.Mediator">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.Mediation.IMediator"/> interface
            </summary>
        </member>
        <member name="F:Neuroglia.Mediation.Mediator.ActivitySourceName">
            <summary>
            Gets the <see cref="T:Neuroglia.Mediation.Mediator"/>'s <see cref="T:System.Diagnostics.ActivitySource"/> name
            </summary>
        </member>
        <member name="M:Neuroglia.Mediation.Mediator.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.Mediation.Mediator"/>
            </summary>
            <param name="serviceProvider">The current <see cref="T:System.IServiceProvider"/></param>
        </member>
        <member name="P:Neuroglia.Mediation.Mediator.ServiceProvider">
            <summary>
            Gets the current <see cref="T:System.IServiceProvider"/>
            </summary>
        </member>
        <member name="M:Neuroglia.Mediation.Mediator.ExecuteAsync``1(Neuroglia.IRequest{``0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Mediation.Mediator.PublishAsync``1(``0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.Mediation.RequestPipeline">
            <summary>
            Represents an <see cref="T:Neuroglia.IRequest"/> pipeline
            </summary>
        </member>
        <member name="M:Neuroglia.Mediation.RequestPipeline.GetHandler``1(System.IServiceProvider)">
            <summary>
            Gets the service used to handle the <see cref="T:Neuroglia.IRequest"/>
            </summary>
            <typeparam name="THandler">The type of <see cref="T:Neuroglia.Mediation.IRequestHandler`2"/> to get</typeparam>
            <param name="serviceProvider">The current <see cref="T:System.IServiceProvider"/></param>
            <returns>The <see cref="T:Neuroglia.Mediation.IRequestHandler`2"/> of the specified type</returns>
        </member>
        <member name="M:Neuroglia.Mediation.RequestPipeline.HandleAsync(System.Object,System.IServiceProvider,System.Threading.CancellationToken)">
            <summary>
            Handles the specified <see cref="T:Neuroglia.IRequest"/>
            </summary>
            <param name="request">The <see cref="T:Neuroglia.IRequest"/> to handle</param>
            <param name="serviceProvider">The current <see cref="T:System.IServiceProvider"/></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The resulting <see cref="T:Neuroglia.IOperationResult"/></returns>
        </member>
        <member name="T:Neuroglia.Mediation.RequestPipeline`1">
            <summary>
            Represents an <see cref="T:Neuroglia.IRequest"/> pipeline
            </summary>
            <typeparam name="TResult">The expected type of <see cref="T:Neuroglia.IOperationResult"/></typeparam>
        </member>
        <member name="M:Neuroglia.Mediation.RequestPipeline`1.HandleAsync(Neuroglia.IRequest{`0},System.IServiceProvider,System.Threading.CancellationToken)">
            <summary>
            Handles the specified <see cref="T:Neuroglia.IRequest"/>
            </summary>
            <param name="request">The <see cref="T:Neuroglia.IRequest"/> to handle</param>
            <param name="serviceProvider">The current <see cref="T:System.IServiceProvider"/></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The resulting <see cref="T:Neuroglia.IOperationResult"/></returns>
        </member>
        <member name="T:Neuroglia.Mediation.RequestPipeline`2">
            <summary>
            Represents an <see cref="T:Neuroglia.IRequest"/> pipeline
            </summary>
            <typeparam name="TRequest">The type of <see cref="T:Neuroglia.IRequest"/> to handle</typeparam>
            <typeparam name="TResult">The expected type of <see cref="T:Neuroglia.IOperationResult"/></typeparam>
        </member>
        <member name="M:Neuroglia.Mediation.RequestPipeline`2.HandleAsync(System.Object,System.IServiceProvider,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Mediation.RequestPipeline`2.HandleAsync(Neuroglia.IRequest{`1},System.IServiceProvider,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Mediation.RequestPipeline`2.HandleException(System.Threading.Tasks.Task{`1})">
            <summary>
            Handles exceptions that might have occured during the execution of the pipeline
            </summary>
            <param name="pipelineExecutionTask">The <see cref="T:System.Threading.Tasks.Task`1"/> to handle the exceptions for</param>
            <returns>The result of the pipeline's execution</returns>
        </member>
    </members>
</doc>
