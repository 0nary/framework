<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neuroglia.Data.Expressions</name>
    </assembly>
    <members>
        <member name="T:Neuroglia.Data.Expressions.ExpressionEvaluatorProvider">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/> interface
            </summary>
        </member>
        <member name="M:Neuroglia.Data.Expressions.ExpressionEvaluatorProvider.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.Data.Expressions.ExpressionEvaluatorProvider"/>
            </summary>
            <param name="serviceProvider">The current <see cref="T:System.IServiceProvider"/></param>
        </member>
        <member name="P:Neuroglia.Data.Expressions.ExpressionEvaluatorProvider.ServiceProvider">
            <summary>
            Gets the current <see cref="T:System.IServiceProvider"/>
            </summary>
        </member>
        <member name="M:Neuroglia.Data.Expressions.ExpressionEvaluatorProvider.GetEvaluator(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.Expressions.ExpressionEvaluatorProvider.GetEvaluators(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.Data.Expressions.IExpressionEvaluatorExtensions">
            <summary>
            Defines extensions for <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.Data.Expressions.IExpressionEvaluatorExtensions.Evaluate(Neuroglia.Data.Expressions.IExpressionEvaluator,System.Object,System.Object)">
            <summary>
            Evaluates an object against the specified data
            </summary>
            <param name="evaluator">The <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/> to use</param>
            <param name="obj">The object to evaluate</param>
            <param name="data">The data to evaluate the specified object against</param>
            <returns>The result of the input object's evaluation</returns>
        </member>
        <member name="T:Neuroglia.Data.Expressions.IServiceCollectionExtensions">
            <summary>
            Defines extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.Data.Expressions.IServiceCollectionExtensions.AddExpressionEvaluator``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds and configures an <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/> of the specified type
            </summary>
            <typeparam name="TEvaluator">The type of <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/> to register</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="lifetime">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceLifetime"/>. Defaults to <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient"/></param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Neuroglia.Data.Expressions.StringExtensions">
            <summary>
            Defines extensions for strings
            </summary>
        </member>
        <member name="M:Neuroglia.Data.Expressions.StringExtensions.IsRuntimeExpression(System.String)">
            <summary>
            Determines whether or not the string is a runtime expression
            </summary>
            <param name="text">The string to check</param>
            <returns>A boolean indicating whether or not the string is a runtime expression</returns>
        </member>
        <member name="T:Neuroglia.Data.Expressions.IExpressionEvaluator">
            <summary>
            Defines the fundamentals of a service used to evaluate expressions
            </summary>
        </member>
        <member name="M:Neuroglia.Data.Expressions.IExpressionEvaluator.Supports(System.String)">
            <summary>
            Determines whether or not the <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/> supports the specified expression language
            </summary>
            <param name="language">The expression language to check</param>
            <returns>A boolean indicating whether or not the <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/> supports the specified expression language</returns>
        </member>
        <member name="M:Neuroglia.Data.Expressions.IExpressionEvaluator.Evaluate(System.String,System.Object,System.Type)">
            <summary>
            Evaluates the value of the specified serverless workflow expression
            </summary>
            <param name="expression">The serverless workflow expression to evaluate</param>
            <param name="data">The data to evaluate the specified expression against</param>
            <param name="expectedType">The expected data type</param>
            <returns>A new <see cref="T:System.Object"/> that represents the resolved serverless workflow expression's value</returns>
        </member>
        <member name="M:Neuroglia.Data.Expressions.IExpressionEvaluator.Evaluate(System.String,System.Object)">
            <summary>
            Evaluates the value of the specified serverless workflow expression
            </summary>
            <param name="expression">The serverless workflow expression to evaluate</param>
            <param name="data">The data to evaluate the specified expression against</param>
            <returns>A new <see cref="T:System.Object"/> that represents the resolved serverless workflow expression's value</returns>
        </member>
        <member name="M:Neuroglia.Data.Expressions.IExpressionEvaluator.Evaluate``1(System.String,System.Object)">
            <summary>
            Evaluates the value of the specified serverless workflow expression
            </summary>
            <typeparam name="T">The expected type of data</typeparam>
            <param name="expression">The serverless workflow expression to evaluate</param>
            <param name="data">The data to evaluate the specified expression against</param>
            <returns>A new <see cref="T:System.Object"/> that represents the resolved serverless workflow expression's value</returns>
        </member>
        <member name="T:Neuroglia.Data.Expressions.IExpressionEvaluatorProvider">
            <summary>
            Defines the fundamentals of a service used to manage <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.Data.Expressions.IExpressionEvaluatorProvider.GetEvaluator(System.String)">
            <summary>
            Gets the first <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/> that supports the specified expression language, if any
            </summary>
            <param name="language">The expression language for which to get an <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/></param>
            <returns>The <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/> that supports the specified expression language, if any</returns>
        </member>
        <member name="M:Neuroglia.Data.Expressions.IExpressionEvaluatorProvider.GetEvaluators(System.String)">
            <summary>
            Gets the <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/>s that support the specified expression language
            </summary>
            <param name="language">The expression language to get the <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/>s for</param>
            <returns>A new <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:Neuroglia.Data.Expressions.IExpressionEvaluator"/> that support the specified expression language</returns>
        </member>
    </members>
</doc>
