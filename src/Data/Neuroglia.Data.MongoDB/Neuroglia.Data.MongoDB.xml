<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neuroglia.Data.MongoDB</name>
    </assembly>
    <members>
        <member name="T:Neuroglia.Data.IServiceCollectionExtensions">
            <summary>
            Defines extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.Data.IServiceCollectionExtensions.AddMongoDbContext``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Neuroglia.Data.MongoDB.IMongoDbContextOptionsBuilder})">
            <summary>
            Adds and configures an <see cref="T:Neuroglia.Data.IMongoDbContext"/> of the specified type
            </summary>
            <typeparam name="TDbContext">The type of <see cref="T:Neuroglia.Data.IMongoDbContext"/> to add</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="configurationAction">An <see cref="T:System.Action`1"/> used to configure the <see cref="T:Neuroglia.Data.IMongoDbContext"/></param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.Data.IServiceCollectionExtensions.AddMongoClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,MongoDB.Driver.MongoClientSettings,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds and configures a new <see cref="T:MongoDB.Driver.IMongoClient"/>
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="clientSettings">The <see cref="T:MongoDB.Driver.MongoClientSettings"/> to use</param>
            <param name="lifetime">The lifetime of the <see cref="T:MongoDB.Driver.IMongoClient"/> to add and configure. Defaults to <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped"/></param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.Data.IServiceCollectionExtensions.AddMongoClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{MongoDB.Driver.MongoClientSettings},Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds and configures a new <see cref="T:MongoDB.Driver.IMongoClient"/>
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="configurationAction">An <see cref="T:System.Action`1"/> used to configure the <see cref="T:MongoDB.Driver.MongoClientSettings"/> to use</param>
            <param name="lifetime">The lifetime of the <see cref="T:MongoDB.Driver.IMongoClient"/> to add and configure. Defaults to <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped"/></param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.Data.IServiceCollectionExtensions.AddMongoDatabase(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds and configures a new <see cref="T:MongoDB.Driver.IMongoDatabase"/>
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="databaseName">The name of the <see cref="T:MongoDB.Driver.IMongoDatabase"/> to add and configure.</param>
            <param name="lifetime">The lifetime of the <see cref="T:MongoDB.Driver.IMongoDatabase"/> to add and configure. Defaults to <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped"/></param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.Data.IServiceCollectionExtensions.AddMongoRepository``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Neuroglia.Data.MongoRepositoryOptions},Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds and configures a MongoDb implementation of the <see cref="T:Neuroglia.Data.IRepository`2"/> interface
            </summary>
            <typeparam name="TEntity">The type of entity managed by the repository to add</typeparam>
            <typeparam name="TKey">The type of key used to uniquely identify entities managed by the repository to add</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="configurationAction">An <see cref="T:System.Action`1"/> used to configure the <see cref="T:Neuroglia.Data.MongoRepository`2"/></param>
            <param name="lifetime">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceLifetime"/> of the <see cref="T:Neuroglia.Data.MongoRepository`2"/> to add. Defaults to <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped"/></param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.Data.IServiceCollectionExtensions.AddMongoRepository(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type,System.Action{Neuroglia.Data.MongoRepositoryOptions},Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds and configures a new <see cref="T:Neuroglia.Data.MongoRepository`2"/>
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="lifetime">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceLifetime"/> of the <see cref="T:Neuroglia.Data.MongoRepository`2"/> to add. Defaults to <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped"/></param>
            <param name="entityType">The type of entity to store</param>
            <param name="keyType">The type of key used to uniquely identify entities to store</param>
            <param name="configurationAction">An <see cref="T:System.Action`1"/> used to configure the <see cref="T:Neuroglia.Data.MongoRepository`2"/></param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Neuroglia.Data.IMongoDbContext">
            <summary>
            Defines the fundamentals of a <see href="https://www.mongodb.com/">MongoDB</see> context
            </summary>
        </member>
        <member name="M:Neuroglia.Data.IMongoDbContext.EnsureCreatedAsync(System.Threading.CancellationToken)">
            <summary>
            Ensures that the related Mongo database has been created
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A boolean indicating whether or not the Mongo database existed before the call</returns>
        </member>
        <member name="M:Neuroglia.Data.IMongoDbContext.Collection``1">
            <summary>
            Gets the <see cref="T:MongoDB.Driver.IMongoCollection`1"/> that manages the specified type of document
            </summary>
            <typeparam name="TDocument">The type of document for which to get the <see cref="T:MongoDB.Driver.IMongoCollection`1"/></typeparam>
            <returns>The <see cref="T:MongoDB.Driver.IMongoCollection`1"/> that manages the specified document</returns>
        </member>
        <member name="M:Neuroglia.Data.IMongoDbContext.Collection``1(System.String)">
            <summary>
            Gets the <see cref="T:MongoDB.Driver.IMongoCollection`1"/> with the specified name that manages the specified type of document
            </summary>
            <typeparam name="TDocument">The type of document for which to get the <see cref="T:MongoDB.Driver.IMongoCollection`1"/></typeparam>
            <param name="collectionName">The name of the <see cref="T:MongoDB.Driver.IMongoCollection`1"/> to get</param>
            <returns>The <see cref="T:MongoDB.Driver.IMongoCollection`1"/> that manages the specified document</returns>
        </member>
        <member name="T:Neuroglia.Data.MongoDbContext">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.Data.IMongoDbContext"/> interface
            </summary>
        </member>
        <member name="M:Neuroglia.Data.MongoDbContext.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Neuroglia.Data.MongoDbContextOptions},Neuroglia.Data.IPluralizer)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.Data.MongoDbContext"/>
            </summary>
            <param name="loggerFactory">The service used to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s</param>
            <param name="options">The service used to access the current <see cref="T:Neuroglia.Data.MongoDbContextOptions"/></param>
            <param name="pluralizer">The service used to pluralize words</param>
        </member>
        <member name="P:Neuroglia.Data.MongoDbContext.Logger">
            <summary>
            Gets the service used to perform logging
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDbContext.Options">
            <summary>
            Gets the current <see cref="T:Neuroglia.Data.MongoDbContextOptions"/>
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDbContext.Client">
            <summary>
            Gets the underlying <see cref="T:MongoDB.Driver.MongoClient"/>
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDbContext.Database">
            <summary>
            Gets the underlying <see cref="T:MongoDB.Driver.IMongoDatabase"/>
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDbContext.Pluralizer">
            <summary>
            Gets the service used to pluralize words
            </summary>
        </member>
        <member name="M:Neuroglia.Data.MongoDbContext.EnsureCreatedAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDbContext.Collection``1">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDbContext.Collection``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDbContext.OnModelCreating(Neuroglia.Data.MongoDB.IModelBuilder)">
            <summary>
            Configures the <see cref="T:Neuroglia.Data.MongoDbContext"/>'s model
            </summary>
            <param name="modelBuilder">The service used to build the <see cref="T:Neuroglia.Data.MongoDbContext"/>'s model</param>
        </member>
        <member name="M:Neuroglia.Data.MongoDbContext.Dispose(System.Boolean)">
            <summary>
            Disposes of the <see cref="T:Neuroglia.Data.MongoDbContext"/>
            </summary>
            <param name="disposing">A boolean indicating whether or not the <see cref="T:Neuroglia.Data.MongoDbContext"/> is being disposed of</param>
        </member>
        <member name="M:Neuroglia.Data.MongoDbContext.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.Data.MongoDbContextOptions">
            <summary>
            Represents the options used to configure an <see cref="T:Neuroglia.Data.IMongoDbContext"/>
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDbContextOptions.ConnectionString">
            <summary>
            Gets/sets the connection string used to connect to the remote MongDB
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDbContextOptions.DatabaseName">
            <summary>
            Gets/sets the name of the database to connect to
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDbContextOptions.DefaultCollectionSettings">
            <summary>
            Gets/sets the default <see cref="T:MongoDB.Driver.MongoCollectionSettings"/>
            </summary>
        </member>
        <member name="T:Neuroglia.Data.MongoDbContextOptions`1">
            <summary>
            Represents the options used to configure a <see cref="T:Neuroglia.Data.MongoDbContext"/>
            </summary>
            <typeparam name="TDbContext">The type of <see cref="T:Neuroglia.Data.IMongoDbContext"/> to configure</typeparam>
        </member>
        <member name="T:Neuroglia.Data.MongoRepository`2">
            <summary>
            Represents the default <see href="https://www.mongodb.com/">MongoDB</see> implementation of the <see cref="T:Neuroglia.Data.IRepository`2"/> interface
            </summary>
            <typeparam name="TEntity">The type of entities managed by the repository</typeparam>
            <typeparam name="TKey">The type of key used to uniquely identify entities managed by the repository</typeparam>
        </member>
        <member name="M:Neuroglia.Data.MongoRepository`2.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Neuroglia.Data.MongoRepositoryOptions{`0,`1}},Neuroglia.Data.IPluralizer,MongoDB.Driver.IMongoDatabase)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.Data.MongoRepository`2"/>
            </summary>
            <param name="loggerFactory">The service used to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s</param>
            <param name="pluralizer">The service used to pluralize words</param>
            <param name="database">The <see cref="T:MongoDB.Driver.IMongoDatabase"/> the <see cref="T:Neuroglia.Data.MongoRepository`2"/> belongs to</param>
            <param name="options">The service used to access the <see cref="T:Neuroglia.Data.MongoRepository`2"/>'s options</param>
        </member>
        <member name="P:Neuroglia.Data.MongoRepository`2.Logger">
            <summary>
            Gets the service used to perform logging
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoRepository`2.Options">
            <summary>
            Gets the options used to configure the <see cref="T:Neuroglia.Data.MongoRepository`2"/>
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoRepository`2.Pluralizer">
            <summary>
            Gets the service used to pluralize words
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoRepository`2.Database">
            <summary>
            Gets the service used to interact with the MongoDB database the <see cref="T:Neuroglia.Data.MongoRepository`2"/> belongs to
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoRepository`2.Collection">
            <summary>
            Gets the underlying <see cref="T:MongoDB.Driver.IMongoCollection`1"/>
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoRepository`2.PendingAggregates">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.List`1"/> containing all <see cref="T:Neuroglia.Data.IAggregateRoot"/>s pending the publication of their <see cref="T:Neuroglia.Data.IDomainEvent"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.Data.MongoRepository`2.ContainsAsync(`1,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoRepository`2.FindAsync(System.Object[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoRepository`2.FindAsync(`1,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoRepository`2.AddAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoRepository`2.UpdateAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoRepository`2.RemoveAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoRepository`2.RemoveAsync(`1,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoRepository`2.ToListAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoRepository`2.SaveChangesAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoRepository`2.AsQueryable">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.Data.MongoRepositoryOptions">
            <summary>
            Represents the options used to configure an <see cref="T:Neuroglia.Data.MongoRepository`2"/>
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoRepositoryOptions.CollectionSettings">
            <summary>
            Gets/sets the <see cref="T:Neuroglia.Data.MongoRepository`2"/>'s <see cref="T:MongoDB.Driver.MongoCollectionSettings"/>
            </summary>
        </member>
        <member name="T:Neuroglia.Data.MongoRepositoryOptions`2">
            <summary>
            Represents the options used to configure an <see cref="T:Neuroglia.Data.MongoRepository`2"/>
            </summary>
            <typeparam name="TEntity">The type of entities managed by the repository</typeparam>
            <typeparam name="TKey">The type of key used to uniquely identify entities managed by the repository</typeparam>
        </member>
        <member name="T:Neuroglia.Data.MongoDB.CollectionBuilder`1">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.Data.MongoDB.ICollectionBuilder"/> interface
            </summary>
            <typeparam name="TDocument">The type of document to build the collection for</typeparam>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.CollectionBuilder`1.#ctor(Neuroglia.Data.MongoDbContext)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.Data.MongoDB.CollectionBuilder`1"/>
            </summary>
            <param name="dbContext">The <see cref="T:Neuroglia.Data.MongoDbContext"/> to build the <see cref="T:MongoDB.Driver.IMongoCollection`1"/> for</param>
        </member>
        <member name="P:Neuroglia.Data.MongoDB.CollectionBuilder`1.DbContext">
            <summary>
            Gets the <see cref="T:Neuroglia.Data.MongoDbContext"/> to build the <see cref="T:MongoDB.Driver.IMongoCollection`1"/> for
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDB.CollectionBuilder`1.CollectionName">
            <summary>
            Gets the name of the collection
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDB.CollectionBuilder`1.OptionsConfiguration">
            <summary>
            Gets the <see cref="T:System.Action"/> used to configure the collection's <see cref="T:MongoDB.Driver.CreateCollectionOptions"/>
            </summary>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.CollectionBuilder`1.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.CollectionBuilder`1.WithOptions(System.Action{MongoDB.Driver.CreateCollectionOptions})">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.CollectionBuilder`1.Build">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.Data.MongoDB.ICollectionBuilder">
            <summary>
            Defines the fundamentals of a service used to build a <see cref="T:MongoDB.Driver.IMongoCollection`1"/>
            </summary>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.ICollectionBuilder.Build">
            <summary>
            Builds the <see cref="T:MongoDB.Driver.IMongoCollection`1"/>
            </summary>
        </member>
        <member name="T:Neuroglia.Data.MongoDB.ICollectionBuilder`1">
            <summary>
            Defines the fundamentals of a service used to build a <see cref="T:MongoDB.Driver.IMongoCollection`1"/>
            </summary>
            <typeparam name="TDocument">The type of document to build the collection for</typeparam>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.ICollectionBuilder`1.WithName(System.String)">
            <summary>
            Sets the name of the collection to build
            </summary>
            <param name="collectionName">The name of the collection to build</param>
            <returns>The configured <see cref="T:Neuroglia.Data.MongoDB.ICollectionBuilder`1"/></returns>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.ICollectionBuilder`1.WithOptions(System.Action{MongoDB.Driver.CreateCollectionOptions})">
            <summary>
            Configures the <see cref="T:MongoDB.Driver.MongoCollectionSettings"/> of the collection to build
            </summary>
            <param name="optionsConfiguration">An <see cref="T:System.Action`1"/> used to configure the <see cref="T:MongoDB.Driver.CreateCollectionOptions"/> of the collection to build</param>
            <returns>The configured <see cref="T:Neuroglia.Data.MongoDB.ICollectionBuilder`1"/></returns>
        </member>
        <member name="T:Neuroglia.Data.MongoDB.IModelBuilder">
            <summary>
            Defines the fundamentals of a service used to build a <see cref="T:Neuroglia.Data.MongoDbContext"/> model
            </summary>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.IModelBuilder.Document``1">
            <summary>
            Builds a collection for the specified document type
            </summary>
            <typeparam name="TDocument">The type of document to configure the collection for</typeparam>
            <returns>A new <see cref="T:Neuroglia.Data.MongoDB.ICollectionBuilder`1"/> used to build the collection for the specified document type</returns>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.IModelBuilder.View``2">
            <summary>
            Builds a new view for the specified document type
            </summary>
            <typeparam name="TDocument">The type of document to build the view for</typeparam>
            <typeparam name="TView">The type of view to build</typeparam>
            <returns>A new <see cref="T:Neuroglia.Data.MongoDB.IViewBuilder`2"/> used to configure the view for the specified document type</returns>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.IModelBuilder.Build">
            <summary>
            Builds the model of the <see cref="T:Neuroglia.Data.MongoDbContext"/> 
            </summary>
        </member>
        <member name="T:Neuroglia.Data.MongoDB.IMongoDbContextOptionsBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:Neuroglia.Data.MongoDbContextOptions"/>
            </summary>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.IMongoDbContextOptionsBuilder.UseConnectionString(System.String)">
            <summary>
            Uses the specified connection string
            </summary>
            <param name="connectionString">The connection string to use to connect to the remote MongDb</param>
            <returns>The configured <see cref="T:Neuroglia.Data.MongoDB.IMongoDbContextOptionsBuilder"/></returns>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.IMongoDbContextOptionsBuilder.UseDatabase(System.String)">
            <summary>
            Uses the specified database
            </summary>
            <param name="database">The database to connect to</param>
            <returns>The configured <see cref="T:Neuroglia.Data.MongoDB.IMongoDbContextOptionsBuilder"/></returns>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.IMongoDbContextOptionsBuilder.ConfigureDefaultCollectionSettings(System.Action{MongoDB.Driver.MongoCollectionSettings})">
            <summary>
            Configures the default <see cref="T:MongoDB.Driver.MongoCollectionSettings"/> to use
            </summary>
            <param name="configurationAction">An <see cref="T:System.Action`1"/> use to configure the default <see cref="T:MongoDB.Driver.MongoCollectionSettings"/> to use</param>
            <returns>The configured <see cref="T:Neuroglia.Data.MongoDB.IMongoDbContextOptionsBuilder"/></returns>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.IMongoDbContextOptionsBuilder.Build">
            <summary>
            Builds the <see cref="T:Neuroglia.Data.MongoDbContextOptions"/>
            </summary>
            <returns>A new <see cref="T:Neuroglia.Data.MongoDbContextOptions"/></returns>
        </member>
        <member name="T:Neuroglia.Data.MongoDB.IMongoDbContextOptionsBuilder`1">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:Neuroglia.Data.MongoDbContextOptions"/>
            </summary>
            <typeparam name="TDbContext">The type of <see cref="T:Neuroglia.Data.IMongoDbContext"/> to build the <see cref="T:Neuroglia.Data.MongoDbContextOptions"/> for</typeparam>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.IMongoDbContextOptionsBuilder`1.Build">
            <summary>
            Builds the <see cref="T:Neuroglia.Data.MongoDbContextOptions"/>
            </summary>
            <returns>A new <see cref="T:Neuroglia.Data.MongoDbContextOptions"/></returns>
        </member>
        <member name="T:Neuroglia.Data.MongoDB.IViewBuilder">
            <summary>
            Defines the fundamentals of a service used to build a MongoDB view
            </summary>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.IViewBuilder.Build">
            <summary>
            Builds the MongoDB view
            </summary>
        </member>
        <member name="T:Neuroglia.Data.MongoDB.IViewBuilder`2">
            <summary>
            Defines the fundamentals of a service used to build a MongoDB view
            </summary>
            <typeparam name="TDocument">The type of document to build a new view for</typeparam>
            <typeparam name="TView">The type of the view to build</typeparam>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.IViewBuilder`2.WithViewName(System.String)">
            <summary>
            Sets the name of the view to build
            </summary>
            <param name="viewName">The name of the view to build</param>
            <returns>The configured <see cref="T:Neuroglia.Data.MongoDB.IViewBuilder`2"/></returns>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.IViewBuilder`2.WithCollectionName(System.String)">
            <summary>
            Sets the name of the collection to view
            </summary>
            <param name="collectionName">The name of the collection to view</param>
            <returns>The configured <see cref="T:Neuroglia.Data.MongoDB.IViewBuilder`2"/></returns>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.IViewBuilder`2.UsePipeline(MongoDB.Driver.PipelineDefinition{`0,`1})">
            <summary>
            Uses the specified <see cref="T:MongoDB.Driver.PipelineDefinition`2"/> to build the view
            </summary>
            <param name="pipeline">The <see cref="T:MongoDB.Driver.PipelineDefinition`2"/> to use to build the view</param>
            <returns>The configured <see cref="T:Neuroglia.Data.MongoDB.IViewBuilder`2"/></returns>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.IViewBuilder`2.ConfigureCreateViewOptions(System.Action{MongoDB.Driver.CreateViewOptions{`0}})">
            <summary>
            Configures the <see cref="T:MongoDB.Driver.CreateViewOptions`1"/> to use
            </summary>
            <param name="optionsConfiguration">An <see cref="T:System.Action`1"/> used to configure <see cref="T:MongoDB.Driver.CreateViewOptions`1"/> to use</param>
            <returns>The configured <see cref="T:Neuroglia.Data.MongoDB.IViewBuilder`2"/></returns>
        </member>
        <member name="T:Neuroglia.Data.MongoDB.ModelBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.Data.MongoDB.IModelBuilder"/> interface
            </summary>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.ModelBuilder.#ctor(Neuroglia.Data.MongoDbContext)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.Data.MongoDB.ModelBuilder"/>
            </summary>
            <param name="dbContext">The <see cref="T:Neuroglia.Data.MongoDbContext"/> to build the model for</param>
        </member>
        <member name="P:Neuroglia.Data.MongoDB.ModelBuilder.DbContext">
            <summary>
            Gets the <see cref="T:Neuroglia.Data.MongoDbContext"/> to build the model for
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDB.ModelBuilder.CollectionBuilders">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.List`1"/> containing all configured <see cref="T:Neuroglia.Data.MongoDB.ICollectionBuilder"/>s
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDB.ModelBuilder.ViewBuilders">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.List`1"/> containing all configured <see cref="T:Neuroglia.Data.MongoDB.IViewBuilder"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.ModelBuilder.Document``1">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.ModelBuilder.View``2">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.ModelBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.Data.MongoDB.MongoDbContextOptionsBuilder`1">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.Data.MongoDB.IMongoDbContextOptionsBuilder`1"/>
            </summary>
            <typeparam name="TDbContext">The type of <see cref="T:Neuroglia.Data.IMongoDbContext"/> to build the <see cref="T:Neuroglia.Data.MongoDbContextOptions"/> for</typeparam>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.MongoDbContextOptionsBuilder`1.#ctor(Neuroglia.Data.MongoDbContextOptions{`0})">
            <summary>
            Initializes a new <see cref="T:Neuroglia.Data.MongoDB.MongoDbContextOptionsBuilder`1"/>
            </summary>
            <param name="options">The <see cref="T:Neuroglia.Data.MongoDbContextOptions`1"/> to configure</param>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.MongoDbContextOptionsBuilder`1.#ctor">
            <summary>
            Initializes a new <see cref="T:Neuroglia.Data.MongoDB.MongoDbContextOptionsBuilder`1"/>
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDB.MongoDbContextOptionsBuilder`1.Options">
            <summary>
            Gets the <see cref="T:Neuroglia.Data.MongoDbContextOptions`1"/> to configure
            </summary>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.MongoDbContextOptionsBuilder`1.UseConnectionString(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.MongoDbContextOptionsBuilder`1.UseDatabase(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.MongoDbContextOptionsBuilder`1.ConfigureDefaultCollectionSettings(System.Action{MongoDB.Driver.MongoCollectionSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.MongoDbContextOptionsBuilder`1.Build">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.Data.MongoDB.ViewBuilder`2">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.Data.MongoDB.IViewBuilder"/> interface
            </summary>
            <typeparam name="TDocument">The type of document to build a new view for</typeparam>
            <typeparam name="TView">The type of the view to build</typeparam>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.ViewBuilder`2.#ctor(Neuroglia.Data.MongoDbContext)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.Data.MongoDB.ViewBuilder`2"/>
            </summary>
            <param name="dbContext">The <see cref="T:Neuroglia.Data.MongoDbContext"/> to build the view for</param>
        </member>
        <member name="P:Neuroglia.Data.MongoDB.ViewBuilder`2.DbContext">
            <summary>
            Gets the <see cref="T:Neuroglia.Data.MongoDbContext"/> to build the view for
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDB.ViewBuilder`2.CollectionName">
            <summary>
            Gets/sets the name of the collection to view
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDB.ViewBuilder`2.ViewName">
            <summary>
            Gets/sets the name of the view to build
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDB.ViewBuilder`2.Pipeline">
            <summary>
            Gets/sets the <see cref="T:MongoDB.Driver.PipelineDefinition`2"/> used to generate the view to build
            </summary>
        </member>
        <member name="P:Neuroglia.Data.MongoDB.ViewBuilder`2.CreateViewOptionsConfiguration">
            <summary>
            Gets/sets the <see cref="T:System.Action`1"/> used to configure <see cref="T:MongoDB.Driver.CreateViewOptions`1"/> to use
            </summary>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.ViewBuilder`2.WithCollectionName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.ViewBuilder`2.WithViewName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.ViewBuilder`2.UsePipeline(MongoDB.Driver.PipelineDefinition{`0,`1})">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.ViewBuilder`2.ConfigureCreateViewOptions(System.Action{MongoDB.Driver.CreateViewOptions{`0}})">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.Data.MongoDB.ViewBuilder`2.Build">
            <inheritdoc/>
        </member>
    </members>
</doc>
